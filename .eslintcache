[{"C:\\Users\\Owner\\Documents\\ReactProjects\\buttonproject\\src\\index.js":"1","C:\\Users\\Owner\\Documents\\ReactProjects\\buttonproject\\src\\App.js":"2","C:\\Users\\Owner\\Documents\\ReactProjects\\buttonproject\\src\\reportWebVitals.js":"3","C:\\Users\\Owner\\Documents\\ReactProjects\\buttonproject\\src\\Attack.js":"4"},{"size":500,"mtime":499162500000,"results":"5","hashOfConfig":"6"},{"size":194,"mtime":1611874709596,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"6"},{"size":6151,"mtime":1611919168676,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"so4j3f",{"filePath":"13","messages":"14","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15","usedDeprecatedRules":"12"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},"C:\\Users\\Owner\\Documents\\ReactProjects\\buttonproject\\src\\index.js",[],["21","22"],"C:\\Users\\Owner\\Documents\\ReactProjects\\buttonproject\\src\\App.js",["23"],"import logo from './logo.svg';\nimport './App.css';\nimport Attack from './Attack';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <Attack />\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\Owner\\Documents\\ReactProjects\\buttonproject\\src\\reportWebVitals.js",[],"C:\\Users\\Owner\\Documents\\ReactProjects\\buttonproject\\src\\Attack.js",["24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46"],"import './App.css';\r\nimport * as React from \"react\";\r\nimport Spritesheet from 'react-responsive-spritesheet';\r\nimport spriteAttack from \"./images/spriteSheet/attackSheet.png\";\r\nimport spriteIdle from \"./images/spriteSheet/idleSheet.png\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport ProgressBar from 'react-bootstrap/ProgressBar';\r\nimport wormAttack from \"./images/spriteSheet/Attack.png\";\r\nimport wormDeath from \"./images/spriteSheet/death1.png\";\r\nimport spriteDead from \"./images/spriteSheet/heroDead.png\";\r\n\r\n\r\n\r\n\r\nfunction Attack() {\r\n    const [gamePhase, setgamePhase] = React.useState(0);\r\n    const [clickCounter, setClickCounter] = React.useState(0);\r\n    const [Health, setHealth] = React.useState(100);\r\n    const [attack, setAttack] = React.useState(0);\r\n    \r\n\r\n\r\n    function attackCharge(){\r\n        console.log(\"Game Phase \" + gamePhase);\r\n        setClickCounter(clickCounter + 0.1);\r\n        setHealth(Health - clickCounter);\r\n        //Since progressBar cannot display negative value, following condition will set health to 0 \r\n        if((Health) <= 0){\r\n            setHealth(0);\r\n            setAttack(1);\r\n        }\r\n        console.log(\"Mouse Clicked \" + clickCounter);\r\n        \r\n        if(gamePhase == 0){\r\n            setgamePhase(1);\r\n            setCounter(14);\r\n            setText1(\"Keep Attacking!\");\r\n\r\n            \r\n        }\r\n        if(gamePhase == 3 || counter == 0){\r\n            setgamePhase(0);\r\n            setHealth(100);\r\n            setClickCounter(0);\r\n            setText(\"Mash the Red button to Attack the Monster Before the Timer Ends\");\r\n            setText1(\"Start\");\r\n            setAttack(0);\r\n            setCounter(15);\r\n            \r\n        }\r\n        if(attack == 1 && gamePhase == 1){\r\n            setgamePhase(3);\r\n            setText1(\"Ember Restored\");\r\n            setText(\"You Have Defeated the Boned Caterpillar, Press the Red Button to Restart\");\r\n\r\n        }\r\n    \r\n    }\r\n//https://codesandbox.io/s/simple-react-countdown-timer-zyfr0?file=/src/index.tsx \r\n    const [counter, setCounter] = React.useState(15);\r\n        React.useEffect(() => {\r\n            console.log(\"counter\" + gamePhase);\r\n            if(gamePhase == 1){\r\n               counter > 0 && setTimeout(() => setCounter(counter - 1), 1000);\r\n            }\r\n        \r\n        },[counter]);\r\n            \r\n    \r\n\r\n    \r\n\r\n    const [text, setText] = React.useState(\"Mash the Red button to Attack the Monster Before the Timer Ends\");\r\n    const [text1, setText1] = React.useState(\"Start\");\r\n\r\n    React.useEffect(() =>{\r\n        if(counter == 0){\r\n            setText(\"You Died, Press the Red Button to Try Again\");\r\n            setText1(\"Souls Lost\");\r\n            setgamePhase(1);\r\n\r\n            \r\n        }\r\n    })\r\n    \r\n        \r\n    return (\r\n    \r\n    <div className=\"attack\">\r\n        <header className=\"App-header\">\r\n            <p>{text}</p>\r\n            <div style={{visibility: gamePhase==1 ? 'visible' : 'hidden'}}>{counter}</div>\r\n            <div>{text1}</div>\r\n            <a onClick={attackCharge} className=\"pulsingButton\">\r\n            </a>\r\n            <ProgressBar variant =\"danger\" now={Health}/>\r\n            \r\n            <a className =\"sprite-size\" style={{visibility: gamePhase == 0 || gamePhase == 3 ? 'visible' : 'hidden'}}>\r\n\r\n                <Spritesheet\r\n                    \r\n                    image={spriteIdle}//spriteIdle, spriteAttack\r\n                    widthFrame = {50}\r\n                    heightFrame = {37}\r\n                    steps = {3}//3 for idle, 17 spriteAttack\r\n                    fps = {3}//3 for Idle, 12 Attack\r\n                    direction = {'rewind'}\r\n                    autoplay = {true}\r\n                    loop = {true}  \r\n                />\r\n            </a>\r\n\r\n            <a className =\"sprite-size\" style={{visibility: gamePhase == 1 && counter > 0 ? 'visible' : 'hidden'}}>\r\n\r\n                <Spritesheet\r\n                    \r\n                    image={spriteAttack}//spriteIdle, spriteAttack\r\n                    widthFrame = {50}\r\n                    heightFrame = {37}\r\n                    steps = {17}//3 for idle, 17 spriteAttack\r\n                    fps = {12}//3 for Idle, 12 Attack\r\n                    direction = {'rewind'}\r\n                    autoplay = {true}\r\n                    loop = {true}  \r\n                />\r\n            </a>\r\n            <a className =\"sprite-size\" style={{visibility: counter == 0 ? 'visible' : 'hidden'}}>\r\n\r\n                <Spritesheet\r\n                    \r\n                    image={spriteDead}//spriteIdle, spriteAttack\r\n                    widthFrame = {50}\r\n                    heightFrame = {37}\r\n                    steps = {3}//3 for idle, 17 spriteAttack\r\n                    fps = {3}//3 for Idle, 12 Attack\r\n                    direction = {'rewind'}\r\n                    autoplay = {true}\r\n                    loop = {true}  \r\n                />\r\n            </a>\r\n            <a className =\"sprite-size1\" style={{visibility: gamePhase == 1 || counter == 0? 'visible' : 'hidden'}}>\r\n                <Spritesheet\r\n                    image={wormAttack}//spriteIdle, spriteAttack\r\n                    widthFrame = {90}\r\n                    heightFrame = {90}\r\n                    steps = {16}//3 for idle, 17 spriteAttack\r\n                    fps = {12}//3 for Idle, 12 Attack\r\n                    direction = {'forward'}\r\n                    autoplay = {true}\r\n                    loop = {true}  \r\n                />\r\n                </a>\r\n                <a className =\"sprite-size1\" style={{visibility:  gamePhase == 3 ? 'visible' : 'hidden'}}>\r\n                <Spritesheet\r\n                    image={wormDeath}//spriteIdle, spriteAttack\r\n                    widthFrame = {90}\r\n                    heightFrame = {90}\r\n                    steps = {1}//3 for idle, 17 spriteAttack\r\n                    fps = {1}//3 for Idle, 12 Attack\r\n                    direction = {'forward'}\r\n                    autoplay = {true}\r\n                    loop = {true}  \r\n                />\r\n                </a>\r\n            \r\n        </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Attack;\r\n",{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":1,"column":8,"nodeType":"53","messageId":"54","endLine":1,"endColumn":12},{"ruleId":"55","severity":1,"message":"56","line":34,"column":22,"nodeType":"57","messageId":"58","endLine":34,"endColumn":24},{"ruleId":"55","severity":1,"message":"56","line":41,"column":22,"nodeType":"57","messageId":"58","endLine":41,"endColumn":24},{"ruleId":"55","severity":1,"message":"56","line":41,"column":38,"nodeType":"57","messageId":"58","endLine":41,"endColumn":40},{"ruleId":"55","severity":1,"message":"56","line":51,"column":19,"nodeType":"57","messageId":"58","endLine":51,"endColumn":21},{"ruleId":"55","severity":1,"message":"56","line":51,"column":37,"nodeType":"57","messageId":"58","endLine":51,"endColumn":39},{"ruleId":"55","severity":1,"message":"56","line":63,"column":26,"nodeType":"57","messageId":"58","endLine":63,"endColumn":28},{"ruleId":"59","severity":1,"message":"60","line":67,"column":11,"nodeType":"61","endLine":67,"endColumn":20,"suggestions":"62"},{"ruleId":"59","severity":1,"message":"63","line":76,"column":5,"nodeType":"64","endLine":76,"endColumn":20,"suggestions":"65"},{"ruleId":"55","severity":1,"message":"56","line":77,"column":20,"nodeType":"57","messageId":"58","endLine":77,"endColumn":22},{"ruleId":"55","severity":1,"message":"56","line":92,"column":47,"nodeType":"57","messageId":"58","endLine":92,"endColumn":49},{"ruleId":"66","severity":1,"message":"67","line":94,"column":13,"nodeType":"68","endLine":94,"endColumn":65},{"ruleId":"66","severity":1,"message":"67","line":98,"column":13,"nodeType":"68","endLine":98,"endColumn":119},{"ruleId":"55","severity":1,"message":"56","line":98,"column":71,"nodeType":"57","messageId":"58","endLine":98,"endColumn":73},{"ruleId":"55","severity":1,"message":"56","line":98,"column":89,"nodeType":"57","messageId":"58","endLine":98,"endColumn":91},{"ruleId":"66","severity":1,"message":"67","line":113,"column":13,"nodeType":"68","endLine":113,"endColumn":116},{"ruleId":"55","severity":1,"message":"56","line":113,"column":71,"nodeType":"57","messageId":"58","endLine":113,"endColumn":73},{"ruleId":"66","severity":1,"message":"67","line":127,"column":13,"nodeType":"68","endLine":127,"endColumn":99},{"ruleId":"55","severity":1,"message":"56","line":127,"column":69,"nodeType":"57","messageId":"58","endLine":127,"endColumn":71},{"ruleId":"66","severity":1,"message":"67","line":141,"column":13,"nodeType":"68","endLine":141,"endColumn":117},{"ruleId":"55","severity":1,"message":"56","line":141,"column":72,"nodeType":"57","messageId":"58","endLine":141,"endColumn":74},{"ruleId":"55","severity":1,"message":"56","line":141,"column":88,"nodeType":"57","messageId":"58","endLine":141,"endColumn":90},{"ruleId":"66","severity":1,"message":"67","line":153,"column":17,"nodeType":"68","endLine":153,"endColumn":107},{"ruleId":"55","severity":1,"message":"56","line":153,"column":77,"nodeType":"57","messageId":"58","endLine":153,"endColumn":79},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'gamePhase'. Either include it or remove the dependency array.","ArrayExpression",["71"],"React Hook useEffect contains a call to 'setText'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [counter] as a second argument to the useEffect Hook.","MemberExpression",["72"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"73","fix":"74"},{"desc":"75","fix":"76"},"Update the dependencies array to be: [counter, gamePhase]",{"range":"77","text":"78"},"Add dependencies array: [counter]",{"range":"79","text":"80"},[2320,2329],"[counter, gamePhase]",[2756,2756],", [counter]"]